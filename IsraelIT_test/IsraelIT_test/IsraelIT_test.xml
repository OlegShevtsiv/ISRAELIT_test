<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IsraelIT_test</name>
    </assembly>
    <members>
        <member name="M:IsraelIT_test.Controllers.AuthorsController.Get(System.Int32)">
            <summary>
            Get author by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IsraelIT_test.Controllers.AuthorsController.GetAll(System.Int32,System.Int32)">
            <summary>
            Get authors limited by page and amount of items on page
            </summary>
            <param name="page"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:IsraelIT_test.Controllers.AuthorsController.Post(IsraelIT_test.RequestModels.AuthorRequestModel)">
            <summary>
            Create new Author
            </summary>
            <param name="author"></param>
            <returns></returns>
        </member>
        <member name="M:IsraelIT_test.Controllers.AuthorsController.Put(System.Int32,IsraelIT_test.RequestModels.AuthorRequestModel)">
            <summary>
            Update any author
            </summary>
            <param name="id"></param>
            <param name="author"></param>
            <returns></returns>
        </member>
        <member name="M:IsraelIT_test.Controllers.AuthorsController.Delete(System.Int32)">
            <summary>
            Delete any author
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IsraelIT_test.Controllers.BooksController.Get(System.Int32)">
            <summary>
            Get book by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IsraelIT_test.Controllers.BooksController.GetByAuthor(System.String,System.Int32,System.Int32)">
            <summary>
            If author name not emthy -- filter books by this parametr, otherwise return not filtered list of books.
            </summary>
            <param name="limit">Amount of elements on page</param>
            <param name="page">Page number</param>
            <returns></returns>
        </member>
        <member name="M:IsraelIT_test.Controllers.BooksController.Post(IsraelIT_test.RequestModels.BookRequestModel)">
            <summary>
            Create new book
            </summary>
            <param name="book"></param>
            <returns></returns>
        </member>
        <member name="M:IsraelIT_test.Controllers.BooksController.Put(System.Int32,IsraelIT_test.RequestModels.BookRequestModel)">
            <summary>
            Update any book
            </summary>
            <param name="book"></param>
            <returns></returns>
        </member>
        <member name="M:IsraelIT_test.Controllers.BooksController.Delete(System.Int32)">
            <summary>
            Delete any book
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
